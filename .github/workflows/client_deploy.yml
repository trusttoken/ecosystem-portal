# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: client test deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        fail-fast: [false]
        node-version: [10.x]

    env:
        DOCKER_FILE: /home/runner/Dockerfile
        DOTENV_FILE: /home/runner/work/ecosystem-portal/ecosystem-portal/client/.env.test
        API_URL: https://test-tt-ecosystem-portal-api.herokuapp.com
        HEROKU_APP_NAME_WEB: test-tt-ecosystem-portal-web

    steps:
    - uses: actions/checkout@v2

    - run: echo 'FROM node:10 as client'                                                                   >${DOCKER_FILE}
    - run: echo 'ENV NODE_ENV=test'                                                                       >>${DOCKER_FILE}
    - run: echo 'WORKDIR /app/client'                                                                     >>${DOCKER_FILE}
    - run: echo 'COPY ./work/ecosystem-portal/ecosystem-portal/client .'                                  >>${DOCKER_FILE}
    - run: echo 'COPY ./work/ecosystem-portal/ecosystem-portal/server ../server'                          >>${DOCKER_FILE}
    - run: echo 'RUN yarn install'                                                                        >>${DOCKER_FILE}
    - run: echo 'RUN yarn buildtest'                                                                      >>${DOCKER_FILE}
    - run: echo 'FROM nginx:1.15.2-alpine'                                                                >>${DOCKER_FILE}
    - run: echo 'COPY ./work/ecosystem-portal/ecosystem-portal/nginx.conf /etc/nginx/conf.d/default.conf' >>${DOCKER_FILE}
    - run: echo 'COPY --from=client /app/client/build /usr/share/nginx/html'                              >>${DOCKER_FILE}
    - run: echo 'COPY --from=client /app/client/public/favicon.ico /user/share/nginx/html'                >>${DOCKER_FILE}
    - run: echo 'CMD sed -i -e '"'"'s/$PORT/'"'"'"$PORT"'"'"'/g'"'"' /etc/nginx/conf.d/default.conf && nginx -g '"'"'daemon off;'"'" >>${DOCKER_FILE}
    - run: echo 'EXPOSE $PORT'                                                                            >>${DOCKER_FILE}

    - run: echo NODE_ENV=test                  >${DOTENV_FILE}
    - run: echo UNLOCK_DATE=2019-01-01        >>${DOTENV_FILE}
    - run: echo TEAM_API_URL=${API_URL}       >>${DOTENV_FILE}
    - run: echo INVESTOR_API_URL=${API_URL}   >>${DOTENV_FILE}
    - run: echo ETH_NETWORK=ropsten           >>${DOTENV_FILE}

    - name: Build, Push and Deploy to Heroku
      id: heroku
      uses: jctaveras/heroku-deploy@v1.0.0  # use the latest version of the action
      with:
        email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
        api_key: ${{ secrets.HEROKU_API_KEY }} # your heroku api key
        app_name: ${HEROKU_APP_NAME_WEB} # your aplication name
        dockerfile_path: '' # set the path to the folder where the Dokerfile is located (doesn't really work)
        options: '' # Docker Build Options

    - run: heroku config:set NODE_ENV=test                                -a ${HEROKU_APP_NAME_WEB}
    - run: heroku config:set DATABASE_URL=${{ secrets.TEST_DATABASE_URL}} -a ${HEROKU_APP_NAME_WEB}
    - run: heroku config:set UNLOCK_DATE=2019-01-01                       -a ${HEROKU_APP_NAME_WEB}
    - run: heroku config:set TEAM_API_URL=${API_URL}                      -a ${HEROKU_APP_NAME_WEB}
    - run: heroku config:set INVESTOR_API_URL=${API_URL}                  -a ${HEROKU_APP_NAME_WEB}
    - run: heroku config:set ETH_NETWORK=ropsten                          -a ${HEROKU_APP_NAME_WEB}

    - run: heroku restart                                                 -a ${HEROKU_APP_NAME_WEB}
